AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template deploys and demonstrates how to deploy Internet Information Services in a scalable way using
  AWS Services such as AWS Systems Managers, EC2 Auto-Scaling and CloudWatch. The main templates deploys Active Directory
  and a scalable VPC. The workloads template will deploy the architecture into an existing AD and VPC environment. 
  **WARNING**
  This template creates Amazon EC2 Windows instance and related resources. You will
  be billed for the AWS resources used if you create a stack from this template. (qs-1r91fg4hu)
Metadata:
  QuickStartDocumentation:
    EntrypointName: Deploy into a new VPC
    Order: "1"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Active Directory Configuration
        Parameters:
          - ADScenarioType
          - DomainDNSName
          - DomainNetBIOSName
          - DomainAdminUser
          - DomainAdminPassword
      - Label:
          default: Self-Managed Active Directory Configuration (Optional if AWS Scenario is AD on EC2)
        Parameters:
          - ADServer1InstanceType
          - ADServer1NetBIOSName
          - ADServer1PrivateIP
          - ADServer2InstanceType
          - ADServer2NetBIOSName
          - ADServer2PrivateIP
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Network Configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - NumberOfAZs
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
      - Label:
          default: Remote Desktop Gateway Configuration
        Parameters:
          - RDGWCIDR
          - NumberOfRDGWHosts
          - RDGWInstanceType
      - Label:
          default: Auto Scaling Group / Application Load Balancer Configuration
        Parameters:
          - ASGDesiredCapacity
          - ASGMaxSize
          - ASGMinSize
          - ELBSchemeParameter
          - WebAccessCIDR
          - IISServerInstanceType
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      ADScenarioType:
        default: AD scenario type
      ADServer1InstanceType:
        default: Domain controller 1 instance type
      ADServer1NetBIOSName:
        default: Domain controller 1 NetBIOS name
      ADServer1PrivateIP:
        default: Domain controller 1 private IP address
      ADServer2InstanceType:
        default: Domain controller 2 instance type
      ADServer2NetBIOSName:
        default: Domain controller 2 NetBIOS name
      ADServer2PrivateIP:
        default: Domain controller 2 private IP address
      ASGDesiredCapacity:
        default: Auto Scaling group desired capacity
      ASGMaxSize:
        default: Auto Scaling group maximum size
      ASGMinSize:
        default: Auto Scaling group minimum size
      AvailabilityZones:
        default: Availability Zones
      DomainAdminPassword:
        default: Domain administrator password
      DomainAdminUser:
        default: Domain administrator user name
      DomainDNSName:
        default: Domain DNS name
      DomainNetBIOSName:
        default: Domain NetBIOS name
      ELBSchemeParameter:
        default: ELB Scheme
      IISServerInstanceType:
        default: Instance type for IIS Servers
      KeyPairName:
        default: Key-pair name
      NumberOfAZs:
        default: Number of Availability Zones
      NumberOfRDGWHosts:
        default: Number of RDGW hosts
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RDGWInstanceType:
        default: RDGW instance type
      RDGWCIDR:
        default: Allowed RDGW external access CIDR
      WebAccessCIDR:
        default: CIDR range that can access load balancers
      VPCCIDR:
        default: VPC CIDR
Parameters:
  ADScenarioType:
    AllowedValues:
      - AWS Directory Service for Microsoft AD (Enterprise Edition)
      - Microsoft AD on Amazon EC2
    Default: AWS Directory Service for Microsoft AD (Enterprise Edition)
    Description: 'Select the type of AD DS deployment to use: AWS Directory Service
      for Microsoft AD or managing your own Amazon EC2 AD instances.'
    Type: String
  ADServer1InstanceType:
    AllowedValues:
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: m5.xlarge
    Description: Amazon EC2 instance type for the first Active Directory instance.
    Type: String
  ADServer1NetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: DC1
    Description: NetBIOS name of the first Active Directory server (up to 15 characters).
    MaxLength: '15'
    MinLength: '1'
    Type: String
  ADServer1PrivateIP:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.0.10
    Description: Fixed private IP for the first Active Directory server located in
      Availability Zone 1.
    Type: String
  ADServer2InstanceType:
    AllowedValues:
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: m5.xlarge
    Description: Amazon EC2 instance type for the second Active Directory instance.
    Type: String
  ADServer2NetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: DC2
    Description: NetBIOS name of the second Active Directory server (up to 15 characters).
    MaxLength: '15'
    MinLength: '1'
    Type: String
  ADServer2PrivateIP:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.32.10
    Description: Fixed private IP for the second Active Directory server located in
      Availability Zone 2.
    Type: String
  ASGMinSize:
    Default: 2
    Type: Number
    Description: Minimum instance size for the Auto Scaling group.
  ASGMaxSize:
    Default: 4
    Type: Number
    Description: Maximum instance size for the Auto Scaling group.
  ASGDesiredCapacity:
    Default: 2
    Type: Number
    Description: Desired capacity instance size for the Auto Scaling group.
  AvailabilityZones:
    Description: >-
      List of Availability Zones to use for the subnets in the VPC. 
      
      NOTE: The logical order is preserved and 2 Availability Zones must be provided, unless the Third Availability Zone parameter is specified, in which case 3 zones must be provided.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the domain administrator. Must be at least 8 characters containing letters, numbers, and symbols.
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: Admin
    Description: >-
      User name for the domain administrator account. This is separate from the default administrator account. Note: This is for a Self-Managed
      AD scenario, when using AWS Directory Service for Microsoft AD "Admin" is the default regardless of the value provided. 
      provided.
    MaxLength: '25'
    MinLength: '5'
    Type: String
  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
    Default: example.com
    Description: Fully qualified domain name (FQDN) of the forest root domain.
    MaxLength: '255'
    MinLength: '2'
    Type: String
  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: example
    Description: NetBIOS name of the domain for users of earlier versions of Windows (up to 15 characters).
    MaxLength: '15'
    MinLength: '1'
    Type: String
  ELBSchemeParameter:
    Type: String
    Default: internet-facing
    AllowedValues:
      - internet-facing
      - internal
    Description: Select whether the ELB is internet-facing (public) or internal (private).
  IISServerInstanceType:
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
    Default: t3.2xlarge
    Description: Amazon EC2 instance type for the second Active Directory instance.
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  NumberOfRDGWHosts:
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Description: Enter the number of Remote Desktop gateway hosts to create.
    Type: String
  NumberOfAZs:
    AllowedValues:
      - '2'
      - '3'
    Default: '2'
    Description: >-
      Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1, located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2, located in Availability Zone 2.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.64.0/19
    Description: (Optional) CIDR block for optional private subnet 3, located in Availability Zone 3.
    Type: String
  PublicSubnet1CIDR:
    Default: 10.0.128.0/20
    Description: CIDR block for the public subnet 2, located in Availability Zone 2.
    Type: String
  PublicSubnet2CIDR:
    Default: 10.0.144.0/20
    Description: CIDR block for the optional public subnet 3, located in Availability Zone 3.
    Type: String
  PublicSubnet3CIDR:
    Default: 10.0.160.0/20
    Description: (Optional) CIDR block for the optional public subnet 3, located in Availability Zone 3.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: us-east-1
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. You must specify this value when using your own bucket.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-microsoft-iis/
    Description: S3 key prefix for the Quick Start assets. This prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slashes (/).
    Type: String
  RDGWInstanceType:
    Default: t2.large
    AllowedValues:
      - t2.large
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
    Description: Amazon EC2 instance type for the Remote Desktop gateway instances.
    Type: String
  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter, in the form x.x.x.x/x.
    Description: Allowed CIDR block for external access to the Remote Desktop gateway instances.
    Type: String
  WebAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter, in the form x.x.x.x/x.
    Description: Allowed CIDR Block for external access to the Elastic Load Balancers.
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter, in the form x.x.x.x/16-28.
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  UseAWSDirectoryServiceEE: !Equals
    - !Ref 'ADScenarioType'
    - AWS Directory Service for Microsoft AD (Enterprise Edition)
  UseELBPublicSubnets: !Equals
    - !Ref 'ELBSchemeParameter'
    - internet-facing
  3AZCondition: !Equals 
      - !Ref NumberOfAZs
      - '3'
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        KeyPairName: !Ref 'KeyPairName'
        NumberOfAZs: !Ref 'NumberOfAZs'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
        PrivateSubnet3ACIDR: !If
          - 3AZCondition
          - !Ref 'AWS::NoValue'
          - !Ref 'PrivateSubnet3CIDR'
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PublicSubnet3CIDR: !If
          - 3AZCondition
          - !Ref 'AWS::NoValue'
          - !Ref 'PublicSubnet3CIDR'
        VPCCIDR: !Ref 'VPCCIDR'
  ADStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-activedirectory/templates/${QSADTemplate}
        - QSADTemplate: !If
            - UseAWSDirectoryServiceEE
            - ad-3.template
            - ad-1.template
          S3Region: !If
            - UsingDefaultBucket
            - !Ref AWS::Region
            - !Ref QSS3BucketRegion
          S3Bucket: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref QSS3BucketName
      Parameters: !If
        - UseAWSDirectoryServiceEE
        - DomainAdminPassword: !Ref 'DomainAdminPassword'
          DomainDNSName: !Ref 'DomainDNSName'
          DomainNetBIOSName: !Ref 'DomainNetBIOSName'
          KeyPairName: !Ref 'KeyPairName'
          PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
          PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
          QSS3BucketName: !Ref 'QSS3BucketName'
          QSS3BucketRegion: !Ref 'QSS3BucketRegion'
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-microsoft-activedirectory/'
          VPCCIDR: !Ref 'VPCCIDR'
          VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        - ADServer1InstanceType: !Ref 'ADServer1InstanceType'
          ADServer1NetBIOSName: !Ref 'ADServer1NetBIOSName'
          ADServer1PrivateIP: !Ref 'ADServer1PrivateIP'
          ADServer2InstanceType: !Ref 'ADServer2InstanceType'
          ADServer2NetBIOSName: !Ref 'ADServer2NetBIOSName'
          ADServer2PrivateIP: !Ref 'ADServer2PrivateIP'
          DomainAdminPassword: !Ref 'DomainAdminPassword'
          DomainAdminUser: !Ref 'DomainAdminUser'
          DomainDNSName: !Ref 'DomainDNSName'
          DomainNetBIOSName: !Ref 'DomainNetBIOSName'
          KeyPairName: !Ref 'KeyPairName'
          PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
          PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
          EntCaServerSubnet: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
          QSS3BucketName: !Ref 'QSS3BucketName'
          QSS3BucketRegion: !Ref 'QSS3BucketRegion'
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-microsoft-activedirectory/'
          VPCCIDR: !Ref 'VPCCIDR'
          VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
  RDGWStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/templates/rdgw-domain.template'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        DomainAdminPassword: !Ref 'DomainAdminPassword'
        DomainAdminUser: !If
          - UseAWSDirectoryServiceEE
          - admin
          - !Ref 'DomainAdminUser'
        DomainDNSName: !Ref 'DomainDNSName'
        DomainMemberSGID: !GetAtt 'ADStack.Outputs.DomainMemberSGID'
        DomainNetBIOSName: !Ref 'DomainNetBIOSName'
        KeyPairName: !Ref 'KeyPairName'
        NumberOfRDGWHosts: !Ref 'NumberOfRDGWHosts'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/'
        RDGWInstanceType: !Ref 'RDGWInstanceType'
        RDGWCIDR: !Ref 'RDGWCIDR'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
  IISStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/iis-workload.template.yaml'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters: !If
        - UseELBPublicSubnets
        - ASGDesiredCapacity: !Ref ASGDesiredCapacity
          ASGMaxSize: !Ref ASGMaxSize
          ASGMinSize: !Ref ASGMinSize
          DomainAdminPassword: !Ref 'DomainAdminPassword'
          DomainAdminUser: !Ref 'DomainAdminUser'
          DomainDNSName: !Ref 'DomainDNSName'
          DomainMemberSecurityGroup: !GetAtt 'ADStack.Outputs.DomainMemberSGID'
          DomainNetBIOSName: !Ref 'DomainNetBIOSName'
          ELBSchemeParameter: !Ref ELBSchemeParameter
          IISServerInstanceType: !Ref IISServerInstanceType
          PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
          PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
          ELBSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
          ELBSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
          WebAccessCIDR: !Ref 'WebAccessCIDR'
          VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
          QSS3BucketName: !Ref 'QSS3BucketName'
          QSS3BucketRegion: !Ref 'QSS3BucketRegion'
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}'
        - ASGDesiredCapacity: !Ref ASGDesiredCapacity
          ASGMaxSize: !Ref ASGMaxSize
          ASGMinSize: !Ref ASGMinSize
          DomainAdminPassword: !Ref 'DomainAdminPassword'
          DomainAdminUser: !Ref 'DomainAdminUser'
          DomainDNSName: !Ref 'DomainDNSName'
          DomainMemberSecurityGroup: !GetAtt 'ADStack.Outputs.DomainMemberSGID'
          DomainNetBIOSName: !Ref 'DomainNetBIOSName'
          ELBSchemeParameter: !Ref ELBSchemeParameter
          IISServerInstanceType: !Ref IISServerInstanceType
          PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
          PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
          ELBSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
          ELBSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
          WebAccessCIDR: !Ref 'WebAccessCIDR'
          VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
          QSS3BucketName: !Ref 'QSS3BucketName'
          QSS3BucketRegion: !Ref 'QSS3BucketRegion'
          QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}'



